[{"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\App.js":"3","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Header\\Header.js":"4","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\MainNav.js":"5","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Movies\\Movies.js":"6","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Search\\Search.js":"7","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Trending\\Trending.js":"8","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Series\\Series.js":"9","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Genres.js":"10","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\SingleContent\\SingleContent.js":"11","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Pagination\\CustomPagination.js":"12","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\hooks\\useGenre.js":"13","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\ContentModal\\ContentModal.js":"14","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\config\\config.js":"15","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Carousel\\Carousel.js":"16"},{"size":290,"mtime":1669037186365,"results":"17","hashOfConfig":"18"},{"size":5233,"mtime":1669101784207,"results":"19","hashOfConfig":"18"},{"size":1263,"mtime":1669798896595,"results":"20","hashOfConfig":"18"},{"size":642,"mtime":1669798842195,"results":"21","hashOfConfig":"18"},{"size":2052,"mtime":1669798978458,"results":"22","hashOfConfig":"18"},{"size":1975,"mtime":1669211046076,"results":"23","hashOfConfig":"18"},{"size":3060,"mtime":1669211352052,"results":"24","hashOfConfig":"18"},{"size":1300,"mtime":1669797985990,"results":"25","hashOfConfig":"18"},{"size":1966,"mtime":1669211359414,"results":"26","hashOfConfig":"18"},{"size":1589,"mtime":1669041954222,"results":"27","hashOfConfig":"18"},{"size":852,"mtime":1669042731143,"results":"28","hashOfConfig":"18"},{"size":918,"mtime":1669037186358,"results":"29","hashOfConfig":"18"},{"size":232,"mtime":1669037186363,"results":"30","hashOfConfig":"18"},{"size":4552,"mtime":1669207225687,"results":"31","hashOfConfig":"18"},{"size":543,"mtime":1669037186362,"results":"32","hashOfConfig":"18"},{"size":1675,"mtime":1669100657148,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"17g73dw",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\index.js",[],["72","73"],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Header\\Header.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\MainNav.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Movies\\Movies.js",["74"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport SingleContent from '../../components/SingleContent/SingleContent';\r\nimport CustomPagination from '../../components/Pagination/CustomPagination';\r\nimport Genres from '../../components/Genres';\r\nimport useGenre from \"../../hooks/useGenre\";\r\n\r\n\r\nconst Movies = () => {\r\n  const [page,setPage] = useState(1);\r\n  const [content , setContent] = useState([]);\r\n  const [numofPages, setnumofPages] = useState();\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const genreforURL = useGenre(selectedGenres);\r\n\r\n\r\n  const fetchMovies = async () => {\r\n    const {data} = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=16c74a5d9cfb9309560e453941e433b1&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`)\r\n\r\n    setContent(data.results);\r\n    setnumofPages(data.total_pages);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [page,genreforURL])\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <hr /> */}\r\n        <span className='pageTitle'>Discover Movies</span>\r\n        <Genres \r\n        type=\"movie\"\r\n        selectedGenres={selectedGenres}\r\n        setSelectedGenres={setSelectedGenres}\r\n        genres={genres}\r\n        setGenres={setGenres}\r\n        setPage={setPage}\r\n      />\r\n        <div className='trending'>\r\n        {\r\n          content && content.map((c) => (\r\n            <SingleContent               key={c.id}\r\n            id={c.id}\r\n            poster={c.poster_path}\r\n            title={c.title || c.name}\r\n            date={c.first_air_date || c.release_date}\r\n            media_type=\"movie\"\r\n            vote_average={c.vote_average}/>\r\n          ))\r\n        }\r\n      </div>\r\n      {numofPages > 1 && (\r\n\r\n      <CustomPagination setPage={setPage} numofPages={numofPages}/>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movies","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Search\\Search.js",["75"],"import React from 'react'\r\nimport {\r\n  Button,\r\n  createMuiTheme,\r\n  Tab,\r\n  Tabs,\r\n  TextField,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport \"./Search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\n\r\n\r\n\r\nconst Search = () => {\r\n  const [type, setType] = useState(0);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n\r\n\r\n\r\n\r\n\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const fetchSearch = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=16c74a5d9cfb9309560e453941e433b1&language=en-US&query=${searchText}&page=${page}&include_adult=false`\r\n      );\r\n      setContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    fetchSearch();\r\n\r\n  }, [type, page]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <hr /> */}\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className=\"search\">\r\n        <TextField\r\n          style={{ flex: 1 }}\r\n          className=\"searchBox\"\r\n          label=\"Search\"\r\n          variant=\"filled\"\r\n          onChange={(e) => setSearchText(e.target.value)}\r\n        />\r\n        <Button\r\n          onClick={fetchSearch}\r\n          variant=\"contained\"\r\n          style={{ marginLeft: 10 }}\r\n        >\r\n          <SearchIcon fontSize=\"large\" />\r\n        </Button>\r\n      </div>\r\n      <Tabs\r\n        value={type}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={(event, newValue) => {\r\n          setType(newValue);\r\n          setPage(1);\r\n        }}\r\n        style={{ paddingBottom: 5 }}\r\n        aria-label=\"disabled tabs example\"\r\n        \r\n      >\r\n        <Tab  style={{ width: \"50%\" }} label=\"Search Movies\" />\r\n        <Tab style={{ width: \"50%\" }} label=\"Search TV Series\" />\r\n      </Tabs>\r\n    </ThemeProvider>\r\n    <div className=\"trending\">\r\n      {content &&\r\n        content.map((c) => (\r\n          <SingleContent\r\n            key={c.id}\r\n            id={c.id}\r\n            poster={c.poster_path}\r\n            title={c.title || c.name}\r\n            date={c.first_air_date || c.release_date}\r\n            media_type={type ? \"tv\" : \"movie\"}\r\n            vote_average={c.vote_average}\r\n          />\r\n        ))}\r\n      {searchText &&\r\n        !content &&\r\n        (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)}\r\n    </div>\r\n    {numOfPages > 1 && (\r\n      <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n    )}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Search","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Trending\\Trending.js",["76"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\nimport \"./Trending.css\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\n\r\nconst Trending = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n\r\n  const fetchTrending = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/trending/all/week?api_key=16c74a5d9cfb9309560e453941e433b1&page=${page}`\r\n    );\r\n\r\n    setContent(data.results);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrending();\r\n  }, [page]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <hr /> */}\r\n      <span  className=\"pageTitle\">Trending</span>\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => (\r\n            <SingleContent\r\n              key={c.id}\r\n              id={c.id}\r\n              poster={c.poster_path}\r\n              title={c.title || c.name}\r\n              date={c.first_air_date || c.release_date}\r\n              media_type={c.media_type}\r\n              vote_average={c.vote_average}\r\n            />\r\n          ))}\r\n      </div>\r\n      <CustomPagination setPage={setPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\Pages\\Series\\Series.js",["77"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport SingleContent from '../../components/SingleContent/SingleContent';\r\nimport CustomPagination from '../../components/Pagination/CustomPagination';\r\nimport Genres from '../../components/Genres';\r\nimport useGenre from \"../../hooks/useGenre\";\r\n\r\n\r\nconst Series = () => {\r\n  const [page,setPage] = useState(1);\r\n  const [content , setContent] = useState([]);\r\n  const [numofPages, setnumofPages] = useState();\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const genreforURL = useGenre(selectedGenres);\r\n\r\n\r\n  const fetchSeries = async () => {\r\n    const {data} = await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=16c74a5d9cfb9309560e453941e433b1&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`)\r\n\r\n    setContent(data.results);\r\n    setnumofPages(data.total_pages);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchSeries();\r\n  }, [page,genreforURL])\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <hr /> */}\r\n        <span className='pageTitle'>Discover Series</span>\r\n        <Genres \r\n        type=\"tv\"\r\n        selectedGenres={selectedGenres}\r\n        setSelectedGenres={setSelectedGenres}\r\n        genres={genres}\r\n        setGenres={setGenres}\r\n        setPage={setPage}\r\n      />\r\n        <div className='trending'>\r\n        {\r\n          content && content.map((c) => (\r\n            <SingleContent               key={c.id}\r\n            id={c.id}\r\n            poster={c.poster_path}\r\n            title={c.title || c.name}\r\n            date={c.first_air_date || c.release_date}\r\n            media_type=\"tv\"\r\n            vote_average={c.vote_average}/>\r\n          ))\r\n        }\r\n      </div>\r\n      {numofPages > 1 && (\r\n\r\n      <CustomPagination setPage={setPage} numofPages={numofPages}/>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Genres.js",["78"],"import React, { useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { Chip } from '@material-ui/core';\r\n\r\nconst Genres = ({\r\n  selectedGenres,\r\n  setSelectedGenres,\r\n  genres,\r\n  setGenres,\r\n  type,\r\n  setPage,\r\n}) => {\r\n\r\n  const handleAdd = (genre) => {\r\n    setSelectedGenres([...selectedGenres, genre]);\r\n    setGenres(genres.filter((g) => g.id !== genre.id));\r\n    setPage(1);\r\n  };\r\n\r\n  const handleRemove = (genre) => {\r\n    setSelectedGenres(\r\n      selectedGenres.filter((selected) => selected.id !== genre.id)\r\n    );\r\n    setGenres([...genres, genre]);\r\n    setPage(1);\r\n  };\r\n\r\n  const fetchGenres = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/genre/${type}/list?api_key=16c74a5d9cfb9309560e453941e433b1&language=en-US`\r\n    );\r\n    setGenres(data.genres);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGenres();\r\n\r\n    return () => {\r\n      setGenres({}); // unmounting\r\n    };\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ padding: \"6px 0\" }}>\r\n      {selectedGenres.map((genre) => (\r\n        <Chip\r\n          style={{ margin: 2 }}\r\n          label={genre.name}\r\n          key={genre.id}\r\n          color=\"primary\"\r\n          clickable\r\n          size=\"large\"\r\n          onDelete={() => handleRemove(genre)}\r\n        />\r\n      ))}\r\n      {genres.map((genre) => (\r\n        <Chip\r\n          style={{ margin: 2 }}\r\n          label={genre.name}\r\n          key={genre.id}\r\n          clickable\r\n          size=\"large\"\r\n          onClick={() => handleAdd(genre)}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Genres","C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\SingleContent\\SingleContent.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Pagination\\CustomPagination.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\hooks\\useGenre.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\ContentModal\\ContentModal.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\config\\config.js",[],"C:\\Users\\ASUS\\Desktop\\Projects\\movie-reco\\Movie-Reco_Dark\\src\\components\\Carousel\\Carousel.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":27,"column":6,"nodeType":"85","endLine":27,"endColumn":24,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":56,"column":6,"nodeType":"85","endLine":56,"endColumn":18,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"89","line":21,"column":6,"nodeType":"85","endLine":21,"endColumn":12,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":27,"column":6,"nodeType":"85","endLine":27,"endColumn":24,"suggestions":"92"},{"ruleId":"83","severity":1,"message":"93","line":42,"column":6,"nodeType":"85","endLine":42,"endColumn":8,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'fetchSearch'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'fetchTrending'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has a missing dependency: 'fetchSeries'. Either include it or remove the dependency array.",["100"],"React Hook useEffect has missing dependencies: 'fetchGenres' and 'setGenres'. Either include them or remove the dependency array. If 'setGenres' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [page, genreforURL, fetchMovies]",{"range":"112","text":"113"},"Update the dependencies array to be: [type, page, fetchSearch]",{"range":"114","text":"115"},"Update the dependencies array to be: [fetchTrending, page]",{"range":"116","text":"117"},"Update the dependencies array to be: [page, genreforURL, fetchSeries]",{"range":"118","text":"119"},"Update the dependencies array to be: [fetchGenres, setGenres]",{"range":"120","text":"121"},[1054,1072],"[page, genreforURL, fetchMovies]",[1359,1371],"[type, page, fetchSearch]",[662,668],"[fetchTrending, page]",[1051,1069],"[page, genreforURL, fetchSeries]",[947,949],"[fetchGenres, setGenres]"]